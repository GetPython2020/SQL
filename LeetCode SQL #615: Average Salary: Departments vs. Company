Given two tables as below, write a query to display the comparison result (higher/lower/same) of the average salary of employees in a department to the company’s average salary.
Table: salary

id	employee_id	amount	pay_date
1	1	9000	2017-03-31
2	2	6000	2017-03-31
3	3	10000	2017-03-31
4	1	7000	2017-02-28
5	2	6000	2017-02-28
6	3	8000	2017-02-28
The employee_id column refers to the employee_id in the following table employee.
employee_id	department_id
1	1
2	2
3	2
So for the sample data above, the result is:

pay_month	department_id	comparison
2017-03	1	higher
2017-03	2	lower
2017-02	1	same
2017-02	2	same
Explanation

In March, the company’s average salary is (9000+6000+10000)/3 = 8333.33…

The average salary for department ‘1’ is 9000, which is the salary of employee_id ‘1’ since there is only one employee in this department. So the comparison result is ‘higher’ since 9000 > 8333.33 obviously.

The average salary of department ‘2’ is (6000 + 10000)/2 = 8000, which is the average of employee_id ‘2’ and ‘3’. So the comparison result is ‘lower’ since 8000 < 8333.33.

With the same formula for the average salary comparison in February, the result is ‘same’ since both the department ‘1’ and ‘2’ have the same average salary with the company, which is 7000.

--------------------------------------------------------------------------------------------------------------
select
    pay_month,
    department_id, 
    case when dept_avg > comp_avg then 'higher' when dept_avg < comp_avg then 'lower' else 'same' end comparison
from (
        select  date_format(b.pay_date, '%Y-%m') pay_month, a.department_id, avg(b.amount) dept_avg,  d.comp_avg
        from employee a 
        inner join salary b
            on (a.employee_id = b.employee_id) 
        inner join (select date_format(c.pay_date, '%Y-%m') pay_month, avg(c.amount) comp_avg 
                    from salary c 
                    group by date_format(c.pay_date, '%Y-%m')) d 
            on ( date_format(b.pay_date, '%Y-%m') = d.pay_month)
group by date_format(b.pay_date, '%Y-%m'), department_id, d.comp_avg) e

-----------------------------------------------------------------------------------
SELECT date_format(S.pay_date,'%Y-%m') AS 'pay_month',
       E.department_id,
      ( CASE WHEN ROUND(AVG(S.amount),2)> A.avg THEN 'higher'
             WHEN ROUND(AVG(S.amount),2)= A.avg THEN 'same'
             ELSE 'lower' END) AS 'comparison'
FROM salary S
lEFT JOIN (SELECT date_format(pay_date,'%Y-%m') AS 'month',
           ROUND(AVG(amount),2) AS 'avg' 
           FROM Salary
           GROUP BY date_format(pay_date,'%Y-%m')) AS A
ON date_format(S.pay_date,'%Y-%m') = A.month
LEFT JOIN employee E
ON S.employee_id = E.employee_id
GROUP BY date_format(S.pay_date,'%Y-%m'), E.department_id
